<!--
  These rules are based on the specification in
  https://stpe.nl/media/stpe.nl-gebruiksinstructie-basisfactuur-v1.0.pdf
  (pages 87 and on)
-->

<pattern xmlns="http://purl.oclc.org/dsdl/schematron" abstract="true" id="syntax">
  <let name="supplierCountry" value="if (/*/cac:AccountingSupplierParty/cac:Party/cac:PostalAddress/cac:Country/cbc:IdentificationCode) then upper-case(normalize-space(/*/cac:AccountingSupplierParty/cac:Party/cac:PostalAddress/cac:Country/cbc:IdentificationCode)) else 'XX'"/>

    <rule context="cac:AccountingSupplierParty/cac:Party[$supplierCountry = 'NL']">
      <!-- Issue: schemeID 0190 is not an allowed value according to 434...
           See http://docs.peppol.eu/poacc/billing/3.0/rules/BR-CL-11/
        -->
      <assert id="BR-NL-1"
              test="contains(' 0106 0190 ', concat(' ', normalize-space(cac:PartyLegalEntity/cbc:CompanyID/@schemeID), ' '))"
              flag="fatal">[BR-NL-1] For suppliers in the Netherlands the supplier MUST provide either a KVK or OIN number for its legal entity identifier (cac:AccountingSupplierParty/cac:Party/cac:PartyLegalEntity/cbc:CompanyID with schemeID 0106 or 0190)</assert>
      <assert id="BR-NL-2"
              test="(//cbc:BuyerReference) or (//cac:OrderReference/cbc:ID)"
              flag="fatal">[BR-NL-2] For suppliers in the Netherlands, the invoice MUST contain either the buyer reference (cbc:BuyerReference) or the order reference (cac:OrderReference/cbc:ID)</assert>

      <assert id="BR-NL-3"
              test="cac:PostalAddress/cbc:StreetName and
                    cac:PostalAddress/cbc:CityName and
                    cac:PostalAddress/cbc:PostalZone"
              flag="fatal">[BR-NL-3] For suppliers in the Netherlands the supplier's address (cac:AccountingSupplierParty/cac:Party/cac:PostalAddress) MUST contain street name (cbc:StreetName), city (cbc:CityName) and postal zone (cbc:PostalZone)</assert>

      <assert id="BR-NL-4"
              test="//cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cac:Country/cbc:IdentificationCode != 'NL' or (
                    //cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cbc:StreetName and
                    //cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cbc:CityName and
                    //cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cbc:PostalZone)"
              flag="fatal">[BR-NL-4] For suppliers in the Netherlands, if the customer is in the Netherlands, the customer address (cac:AccountingCustomerParty/cac:Party/cac:PostalAddress) MUST contain the street name (cbc:StreetName), the city (cbc:CityName) and the postal zone (cbc:PostalZone)</assert>

      <assert id="BR-NL-5"
              test="(not(//cac:TaxRepresentativeParty)) or
                    (//cac:TaxRepresentativeParty/cac:PostalAddress/cac:Country/cbc:IdentificationCode != 'NL') or (
                    //cac:TaxRepresentativeParty/cac:PostalAddress/cbc:StreetName and
                    //cac:TaxRepresentativeParty/cac:PostalAddress/cbc:CityName and
                    //cac:TaxRepresentativeParty/cac:PostalAddress/cbc:PostalZone)"
              flag="fatal">[BR-NL-5] For suppliers in the Netherlands, if the fiscal representative is in the Netherlands, the representative's address (cac:TaxRepresentativeParty/cac:PostalAddress) MUST contain street name (cbc:StreetName), city (cbc:CityName) and postal zone (cbc:PostalZone)</assert>

      <!-- BR-NL-6 is not specified; BR-NL-7 and BR-NL-8 are specified below -->

      <assert id="BR-NL-9"
              test="//cbc:InvoiceTypeCode != 384 or
                    //cac:BillingReference/cac:InvoiceDocumentReference/cbc:ID"
              flag="fatal">[BR-NL-9] For suppliers in the Netherlands, if the document is a corrective invoice (cbc:InvoiceTypeCode = 384), the document MUST contain an invoice reference (cac:BillingReference/cac:InvoiceDocumentReference/cbc:ID)</assert>
      <assert id="BR-NL-10"
              test="not(//cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cac:Country/cbc:IdentificationCode = 'NL' and //cac:AccountingCustomerParty/cac:Party/cac:PartyLegalEntity/cbc:CompanyID and not(contains(' 0106 0190 ', concat(' ', normalize-space(//cac:AccountingCustomerParty/cac:Party/cac:PartyLegalEntity/cbc:CompanyID/@schemeID), ' '))))"
              flag="fatal">[BR-NL-10] For suppliers in the Netherlands, if the customer is in the Netherlands, the customer's legal entity identifier (cac:AccountingCustomerParty/cac:Party/cac:PartyLegalEntity/cbc:CompanyID) MUST be either a KVK (schemeID=0106) or OIN number (schemeID=0190)</assert>
      <assert id="BR-NL-11"
              test="xs:decimal(/ubl:Invoice/cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 and not(//cac:PaymentMeans)"
              flag="fatal">[BR-NL-11] For suppliers in the Netherlands, the supplier MUST provide a means of payment (cac:PaymentMeans) if the payment is from customer to supplier</assert>

      <assert id="BR-NL-12"
              test="xs:decimal(/ubl:Invoice/cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 and
                   not(//cac:PaymentMeans/cbc:PaymentMeansCode = 30 or
                    //cac:PaymentMeans/cbc:PaymentMeansCode = 48 or
                    //cac:PaymentMeans/cbc:PaymentMeansCode = 49 or
                    //cac:PaymentMeans/cbc:PaymentMeansCode = 57 or
                    //cac:PaymentMeans/cbc:PaymentMeansCode = 58 or
                    //cac:PaymentMeans/cbc:PaymentMeansCode = 59)"
              flag="fatal">[BR-NL-12] For suppliers in the Netherlands, the payment means code (cac:PaymentMeans/cbc:PaymentMeansCode) MUST be one of 30, 48, 49, 57, 58 or 59</assert>
    </rule>

    <rule context="ubl:Invoice | ubl:CreditNote">
      <assert id="BR-NL-7"
              test="cbc:InvoiceTypeCode = 380 or
                    cbc:InvoiceTypeCode = 381 or
                    cbc:InvoiceTypeCode = 384 or
                    cbc:InvoiceTypeCode = 389"
              flag="fatal">[BR-NL-7] The invoice type code (cbc:InvoiceTypeCode) MUST have one of the following values: 380, 381, 384, 389</assert>

      <assert id="BR-NL-8"
              test="cbc:InvoiceTypeCode != 381 or
                    /ubl:CreditNote"
              flag="fatal">[BR-NL-8] If the invoice type code (cbc:InvoiceTypeCode) is 381, the document MUST use the CreditNote scheme</assert>

      <assert id="BR-NL-8"
              test="cbc:InvoiceTypeCode != 381 or
                    /ubl:Invoice"
              flag="fatal">[BR-NL-8] If the invoice type code (cbc:InvoiceTypeCode) is 380, 384 or 389, the document MUST use the Invoice scheme</assert>
    </rule>


    <!--
        Recommendations specific for NL
        Invoices that fail these rules result in warnings, but should not be rejected
    -->
    <rule context="ubl:Invoice | ubl:CreditNote">
      <assert id="BR-NL-19"
              test="cbc:TaxCurrencyCode"
              flag="warning">[BR-NL-19] The use of a tax currency code (cbc:TaxCurrencyCode) is not recommended</assert>
      <assert id="BR-NL-20"
              test="cbc:TaxPointDate"
              flag="warning">[BR-NL-20] The use of a tax point date (cbc:TaxPointDate) is not recommended, and its value will be ignored</assert>
      <assert id="BR-NL-21"
              test="cac:InvoicePeriod/cbc:DescriptionCode"
              flag="warning">[BR-NL-21] The use of a tax point date code (cac:InvoicePeriod/cbc:DescriptionCode) is not recommended, and its value will be ignored</assert>
      <assert id="BR-NL-22"
              test="cbc:Note"
              flag="warning">[BR-NL-22] The use of an invoice note subject code (cbc:Note) is not recommended. If there is a good reason to use it, it should be agreed upon with the customer</assert>
      <assert id="BR-NL-23"
              test="cbc:ProfileID"
              flag="warning">[BR-NL-23] The use of a business profile ID (cbc:ProfileID) is not recommended, unless needed for transport</assert>
      <assert id="BR-NL-24"
              test="cac:BillingReference/cac:InvoiceDocumentReference/cbc:IssueDate"
              flag="warning">[BR-NL-24] The use of a preceding invoice issue date (cac:BillingReference/cac:InvoiceDocumentReference/cbc:IssueDate) is not recommended</assert>
      <assert id="BR-NL-25"
              test="cac:AccountingSupplierParty/cac:Party/cac:PartyTaxScheme/cbc:CompanyID"
              flag="warning">[BR-NL-25] The use of a seller tax registration identifier (cac:AccountingSupplierParty/cac:Party/cac:PartyTaxScheme/cbc:CompanyID) is not recommended, since this is not applicable to suppliers in the Netherlands</assert>
      <assert id="BR-NL-26"
              test="cac:AccountingSupplierParty/cac:Party/cac:PartyLegalEntity/cbc:CompanyLegalForm"
              flag="warning">[BR-NL-26] The use of the seller additional legal information field (cac:AccountingSupplierParty/cac:Party/cac:PartyLegalEntity/cbc:CompanyLegalForm) is not recommended, since this is not applicable for suppliers in the Netherlands</assert>
      <assert id="BR-NL-27-1"
              test="cac:AccountingSupplierParty/cac:Party/cac:PostalAddress/cac:AddressLine/cbc:Line"
              flag="warning">[BR-NL-27] The use of the seller address line 3 (cac:AccountingSupplierParty/cac:Party/cac:PostalAddress/cac:AddressLine/cbc:Line) is not recommended</assert>
      <assert id="BR-NL-27-2"
              test="cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cac:AddressLine/cbc:Line"
              flag="warning">[BR-NL-27] The use of the seller address line 3 (cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cac:AddressLine/cbc:Line) is not recommended</assert>
      <assert id="BR-NL-27-3"
              test="cac:TaxRepresentativePart/cac:PostalAddress/cac:AddressLine/cbc:Line"
              flag="warning">[BR-NL-27] The use of the seller address line 3 (cac:TaxRepresentativePart/cac:PostalAddress/cac:AddressLine/cbc:Line) is not recommended</assert>
      <assert id="BR-NL-27-4"
              test="cac:Delivery/cac:DeliveryLocation/cac:Address/cac:AddressLine/cbc:Line"
              flag="warning">[BR-NL-27] The use of the seller address line 3 (cac:Delivery/cac:DeliveryLocation/cac:Address/cac:AddressLine/cbc:Line) is not recommended</assert>
      <assert id="BR-NL-28-1"
              test="cac:AccountingSupplierParty/cac:Party/cac:PostalAddress/cbc:CountrySubentity"
              flag="warning">[BR-NL-28] The use of a country subdivision (cac:AccountingSupplierParty/cac:Party/cac:PostalAddress/cbc:CountrySubentity) is not recommended</assert>
      <assert id="BR-NL-28-2"
              test="cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cbc:CountrySubentity"
              flag="warning">[BR-NL-28] The use of a country subdivision (cac:AccountingCustomerParty/cac:Party/cac:PostalAddress/cbc:CountrySubentity) is not recommended</assert>
      <assert id="BR-NL-28-3"
              test="cac:TaxRepresentativePart/cac:PostalAddress/cbc:CountrySubentity"
              flag="warning">[BR-NL-28] The use of a country subdivision (cac:TaxRepresentativePart/cac:PostalAddress/cbc:CountrySubentity) is not recommended</assert>
      <assert id="BR-NL-28-4"
              test="cac:Delivery/cac:DeliveryLocation/cac:Address/cbc:CountrySubentity"
              flag="warning">[BR-NL-28] The use of a country subdivision (cac:Delivery/cac:DeliveryLocation/cac:Address/cbc:CountrySubentity) is not recommended</assert>
      <assert id="BR-NL-29"
              test="cac:PaymentMeans/cbc:PaymentMeansCode/@Name"
              flag="warning">[BR-NL-29] The use of a payment means text (cac:PaymentMeans/cbc:PaymentMeansCode/@Name) is not recommended</assert>
      <assert id="BR-NL-30"
              test="cac:PaymentMeans/cac:PayeeFinancialAccount/cbc:Name"
              flag="warning">[BR-NL-30] The use of a payment account name (cac:PaymentMeans/cac:PayeeFinancialAccount/cbc:Name) is not recommended</assert>
      <!-- rule BR-NL-31 is specified below, as it needs more specific context -->
      <!-- should move BR-NL-32 to its own context too, then add BR-NL-34 there -->
      <assert id="BR-NL-32-1"
              test="cac:AllowanceCharge/cbc:AllowanceChargeReasonCode"
              flag="warning">[BR-NL-32] The use of an allowance reason code (cac:AllowanceCharge/cbc:AllowanceChargeReasonCode) is not recommended</assert>
      <assert id="BR-NL-32-2"
              test="cac:InvoiceLine/cac:AllowanceCharge/cbc:AllowanceChargeReasonCode"
              flag="warning">[BR-NL-32] The use of an allowance reason code (cac:InvoiceLine/cac:AllowanceCharge/cbc:AllowanceChargeReasonCode) is not recommended</assert>
      <assert id="BR-NL-32-3"
              test="cac:CreditNoteLine/cac:AllowanceCharge/cbc:AllowanceChargeReasonCode"
              flag="warning">[BR-NL-32] The use of an allowance reason code (cac:CreditNoteLine/cac:AllowanceCharge/cbc:AllowanceChargeReasonCode) is not recommended</assert>
      <!-- TODO: this test needs checking and testing -->
      <assert id="BR-NL-33"
              test="cac:TaxTotal/cbc:TaxAmount/@currencyID and cbc:DocumentCurrencyCode and cac:TaxTotal/cbc:TaxAmount/@currencyID != cbc:DocumentCurrencyCode"
              flag="warning">[BR-NL-33] The use of a tax total in accounting currency (cac:TaxTotal/cbc:TaxAmount/@currencyID different than DocumentCurrencyCode) is not recommended</assert>
      <assert id="BR-NL-32-1"
              test="cac:AllowanceCharge/cbc:AllowanceChargeReasonCode"
              flag="warning">[BR-NL-32] The use of a charge reason code (cac:AllowanceCharge/cbc:AllowanceChargeReasonCode) is not recommended</assert>
      <assert id="BR-NL-32-2"
              test="cac:InvoiceLine/cac:AllowanceCharge/cbc:AllowanceChargeReasonCode"
              flag="warning">[BR-NL-32] The use of a charge reason code (cac:InvoiceLine/cac:AllowanceCharge/cbc:AllowanceChargeReasonCode) is not recommended</assert>
      <assert id="BR-NL-32-3"
              test="cac:CreditNoteLine/cac:AllowanceCharge/cbc:AllowanceChargeReasonCode"
              flag="warning">[BR-NL-32] The use of a charge reason code (cac:CreditNoteLine/cac:AllowanceCharge/cbc:AllowanceChargeReasonCode) is not recommended</assert>
      <assert id="BR-NL-35"
              test="cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cbc:TaxExemptionReasonCode"
              flag="warning">[BR-NL-35] The use of a tax exemption reason code (cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory/cbc:TaxExemptionReasonCode) is not recommended</assert>
    </rule>

    <rule context="cac:PaymentMeans">
      <!-- check if payment means code is 58 or 59 -->
      <!-- NOTE: this should be tested well... -->
      <assert id="BR-NL-31"
              test="not(cbc:PaymentMeansCode = 58 or cbc:PaymentMeansCode = 59 and cac:PaymentMeans/cac:PayeeFinancialAccount/cac:FinancialInstitutionBranch/cbc:ID)"
              flag="warning">[BR-NL-] The use of a payment service provider identifier (cac:PaymentMeans/cac:PayeeFinancialAccount/cac:FinancialInstitutionBranch/cbc:ID) is not recommended for SEPA payments (cac:PaymentMeans/cbc:PaymentMeansCode = 58 or 59)</assert>
    </rule>




</pattern>
